import telebot
from config import API_TOKEN
from telebot import types

import requests
from PIL import Image
from urllib.request import urlopen

global resultConnect
global film_id
global film_name
global number_of_similar_films

bot = telebot.TeleBot(API_TOKEN)

kb = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
btn1 = types.KeyboardButton(text="–î–∞üòé")
btn2 = types.KeyboardButton(text="–ù–µ—Çü•≤")
kb.add(btn1,btn2)


def connect(params, url):
    token = '8f7e6671-0ff8-41d7-a45c-b3dd32198698'
    try:
        r = requests.get(url, headers={'accept': 'application/json', "X-API-KEY": token},
                         params=params)  # –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        r.raise_for_status()
        return r.json()
    except requests.exceptions.HTTPError as err:
        print(err)


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—åüé≥",callback_data='start')
    markup.row(btn1)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–∏–ª—å–º—ã –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É \n<b>–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º</b>",reply_markup=markup, parse_mode="html")
    bot.register_next_step_handler(message, on_click)
@bot.message_handler()
def on_click(message):
    global resultConnect
    global film_name
    film_name = message.text
    resultConnect = connect(params= {'keyword': message.text, 'page': 1},url='https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword')
    photo = your_movie(resultConnect)
    bot.send_photo(chat_id=message.chat.id, photo=photo)
    bot.send_message(message.chat.id, '–≠—Ç–æ —Ç–æ—Ç —Ñ–∏–ª—å–º –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–±—Ä–∞–ª–∏?',reply_markup=kb)
    bot.register_next_step_handler(message, after_choose_film)


@bot.message_handler()
def after_choose_film(message):
    if message.text.lower() == '–¥–∞üòé':
        movie_results(message)
    if message.text.lower() == '–Ω–µ—Çü•≤':
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ñ–∏–ª—å–º–∞.", reply_markup=None)

@bot.callback_query_handler(func=lambda callback: True)
def callback_start(callback):
    if callback.data == 'start':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞')


def your_movie(result):
    for i in range(len('films')):
        posterUrl = result['films'][i]['posterUrl']
        image = Image.open(urlopen(posterUrl))
        return image

# –≤ —Ü–µ–ª–æ–º –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–Ω–æ–ø–∫–∏, –Ω–æ –ø–æ–∫–∞ —Å–¥–µ–ª–∞—é, —á—Ç–æ–±—ã –≤—Å–µ —Å—Ä–∞–∑—É –≤—ã–≤–æ–¥–∏–ª
@bot.message_handler()
def movie_results(message):  # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ Python
    global resultConnect
    global film_id
    film_id = resultConnect['films'][0]['filmId']
    bot.send_message(message.chat.id, f'<b>–§–∏–ª—å–º</b>: {resultConnect["films"][0]["nameRu"]}\n'
                                      f'<b>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞</b>: {resultConnect["films"][0]["year"]}\n'
                                      f'<b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {resultConnect["films"][0]["description"]}\n'
                                      f'<b>–†–µ–π—Ç–∏–Ω–≥ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞</b>: {resultConnect["films"][0]["rating"]}\n'
                                      f'<b>ID –§–∏–ª—å–º–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫–µ</b>: {film_id}', parse_mode="html")
    bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ —Ñ–∏–ª—å–º—ã?',reply_markup= kb)
    bot.register_next_step_handler(message, similar_films)

@bot.message_handler()
def similar_films(message):

    if message.text.lower() == "–¥–∞üòé":
        global film_id
        global film_name
        global number_of_similar_films

        result = connect(params={'keyword': film_name, 'page': 1}, url=f"https://kinopoiskapiunofficial.tech/api/v2.2/films/{film_id}/similars")
        lst_of_id = [0]

        for i in range((result['total']) - int(0.4 * result['total'])):
            id = result['items'][i]['filmId']
            lst_of_id.append(id)
            num = str(i + 1) + '.'
            bot.send_message(message.chat.id, f'{num}{result["items"][i]["nameRu"]}')
        bot.send_message(message.chat.id,'–•–æ—Ç–∏—Ç–µ –ª–∏ —É–∑–Ω–∞—Ç—å –æ –∫–∞–∫–æ–º-–Ω–∏–±—É–¥—å –∏–∑ —Ñ–∏–ª—å–º–æ–≤ –ø–æ–¥—Ä–æ–±–Ω–µ–µ?\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ–∏–ª—å–º–∞',reply_markup=None)
        bot.register_next_step_handler(message,secondFilm,lst_of_id)
    else:
        bot.send_message(message.chat.id, "–¢–æ–≥–¥–∞ —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!")

@bot.message_handler()
def secondFilm(message, lst_of_id):
    global number_of_similar_films
    global film_name
    try:
        number_of_similar_films = lst_of_id[int(message.text)]
        result = connect(params={'keyword': film_name, 'page': 1},
                         url=f'https://kinopoiskapiunofficial.tech/api/v2.1/films/{number_of_similar_films}')
        bot.send_message(message.chat.id, f"<b>–§–∏–ª—å–º</b>: {result['data']['nameRu']}\n"
                                          f"<b>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞</b>: {result['data']['year']}\n"
                                          f"<b>–û–ø–∏—Å–∞–Ω–∏–µ</b>: {result['data']['description']}\n"
                                          f"<b>Url –∞–¥—Ä–µ—Å</b>: {result['data']['webUrl']}",parse_mode="html", reply_markup=None)

    except TypeError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä')


bot.polling(none_stop=True)
